Reverse a Linked List


// APPROACH 2: Recursive method...  TC->O(N)  SC->O(N)
class Solution
{
    public:
    struct Node* reverse(struct Node* head)
    {
        if(head->next == NULL)  // for one element in the list
            return head;
        
        struct Node* tempReverse = reverse(head->next);
        
        // Now head is pointing to the last node of tempReverse list
        // Now last node of tempReverse list should point to head and head ->next = NULL...
        
        head->next->next = head;
        head->next = NULL;
        
        return tempReverse;
        
    }
    
    struct Node* reverseList(struct Node *head)
    {
        if(head == NULL)
            return head;
        return reverse(head);
        
    }
    
};

//*******************************************************************************************************************
    
// // APPROACH 1: Iterative method...    TC->O(N)  SC->O(1)

// class Solution
// {
//     public:
    
//     struct Node* reverseList(struct Node *head)
//     {
//         Node* curr = head;
//         Node* Next = NULL;
//         Node* prev = NULL;
//         while(curr != NULL)
//         {
//             Next = curr->next;
//             curr->next = prev;
//             prev = curr;
//             curr = Next;
            
//         }
        
//         return prev;
//     }
    
// };
